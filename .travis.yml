language: r

matrix:
  include:
    - dist: trusty
      r: 3.5.2 
    - dist: xenial
      r: 3.5.2


sudo: true
cache:
  packages: true
  directories:
    - _bookdown_files
    - $HOME/.npm
    
latex: false
branches:
  only:
    - master
    - release
    - stable

pandoc_version: 2.3.1

git:
  depth: 5
  submodules: false
  
repos:
  CRAN: https://cloud.r-project.org

addons:
  apt:
    sources:
      - sourceline: ppa:opencpu/imagemagick
      - sourceline: ppa:opencpu/poppler
      - sourceline: ppa:git-core/ppa
    packages:
      - ghostscript
      - imagemagick
      - optipng
      - graphviz
      - qpdf
      # git2r
      - libgit2-dev
      # for sf rgdal
      - libudunits2-dev
      - libproj-dev
      - libgeos-dev
      - libgdal-dev
      # for odbc
      - unixodbc 
      - unixodbc-dev
      - odbc-postgresql
      - libmagick++-dev
      - libpoppler-cpp-dev
      - libtesseract-dev 
      - libleptonica-dev 
      - tesseract-ocr-eng

  
#brew_packages: 
#  - ghostscript
#  - imagemagick
#  - optipng
#  - graphviz

#  - gdal
#  - unixodbc
#  - psqlodbc

before_install:
#  - mkdir ~/.R
#  - cp Makevars ~/.R
  - nvm install stable
  - npm install netlify-cli -g
  - curl -fLo /tmp/tinytex.tar.gz https://travis-bin.yihui.name/tinytex.tar.gz
  - tar -xzf /tmp/tinytex.tar.gz -C $HOME
  - export PATH=$HOME/.TinyTeX/bin/x86_64-linux:$PATH
  - tlmgr install $(cat latex/TeXLive.pkgs | tr '\n' ' ') || true
  - export COMMIT_MSG=$(git log -1 --format='%h %<(50,trunc)%s')
  - echo $COMMIT_MSG
  - export DEPLOY_MSG=${COMMIT_MSG//[\'\"\`]/}
  - echo $DEPLOY_MSG
  - chmod +x ./_deploy.sh
  
before_script:
 # - Rscript -e 'tinytex::install_tinytex()' 
 # - Rscript -e 'tinytex::tlmgr_install(readLines("latex/TeXLive.pkgs"))'
  - Rscript -e 'update.packages(lib.loc = .libPaths()[1], ask = FALSE)'

script:
  - Rscript -e 'bookdown::render_book("index.Rmd")'

# deploy 
after_success:
#  - make pdf

after_script:
  - ./_deploy.sh

deploy:
  - provider: script
    script: netlify deploy --dir _book --prod --message "$DEPLOY_MSG"
    skip_cleanup: true
    on:
      branch: master
  - provider: script
    script: netlify deploy --dir _book --message "$DEPLOY_MSG"
    skip_cleanup: true
    on:
      all_branches: true
      condition: $TRAVIS_BRANCH != "master"

notifications:
  email:
    on_success: change
    on_failure: change
